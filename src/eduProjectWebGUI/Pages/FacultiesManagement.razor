@page "/admin/faculties"
@layout LoginLayout
@inject IModalService Modal
@inject ApiService ApiService

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    ul {
        margin-left: 20px;
    }

    li {
        list-style-type: none;
        margin: 10px 0 10px 10px;
        position: relative;
    }

        li:before {
            content: "";
            position: absolute;
            top: -10px;
            left: -20px;
            border-left: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            width: 20px;
            height: 15px;
        }

        li:after {
            position: absolute;
            content: "";
            top: 5px;
            left: -20px;
            border-left: 1px solid #ddd;
            border-top: 1px solid #ddd;
            width: 20px;
            height: 100%;
        }

        li:last-child:after {
            display: none;
        }

    span {
        display: block;
        border: 1px solid #ddd;
        padding: 10px;
        color: #888;
        text-decoration: none;
    }

        span:hover, span:focus {
            background: #eee;
            color: #000;
            border: 1px solid #eee;
            cursor: grab;
        }

    .h3-tree-title {
        color: gray;
    }

    .h3-title {
        color: gray;
        text-align: center;
    }

    .btn {
        margin-top: 1.5rem;
        margin-bottom: 30px;
    }
</style>

<div class="container">

    <h3 class="h3-title">Administrator</h3>

    @if (faculties == null)
    {
<h3>Loading...</h3> }
else
{
<h3 class="h3-tree-title">Fakulteti</h3>
                <br />
                                <ul class="wtree">
                                    @foreach (var f in faculties)
                                    {
                    <li>
                        <span>@f.Name</span>
                        <ul>
                            <li>
                                @foreach (var sp in f.StudyPrograms)
                                {
            <span>@sp.Name</span>
                                    @if (sp.StudyProgramSpecializations.Count != 0)
                                    {
            <ul>
                @foreach (var sps in sp.StudyProgramSpecializations)
                {
<li>
    <span>@sps.Name</span>
</li>
}
            </ul>}}
                            </li>
                        </ul>
                    </li>
}

                                </ul>
                                                <button class="btn btn-outline-primary float-right" style="margin-left:0.75rem;">Dodaj fakultet</button>
                                                                <button class="btn btn-outline-primary float-right">Dodaj studijski program</button>}

</div>





<h3 class="h3-title">Dodavanje fakulteta</h3>

<EditForm OnValidSubmit="@AddFaculty" Model="@model">
    <h5>Naziv</h5>
    <InputText @bind-Value="@model.Name"></InputText>

    <h5>Adresa</h5>
    <InputText @bind-Value="@model.Address"></InputText>

    <h5>Dodani studijski programi</h5>
    @foreach (var prog in model.StudyProgramInputModels)
    {
<table>
    <thead>
        <tr>
            <td>Naziv</td>
            <td>Ciklus</td>
            <td>Trajanje</td>
            <td>Akcija</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@prog.Name</td>
            <td>@prog.Cycle</td>
            <td>@prog.DurationYears</td>
            <td><button @onclick="@(() => model.StudyProgramInputModels.Remove(prog))">Ukloni</button></td>
        </tr>
    </tbody>
</table>

                    <h6>Studijski smjerovi</h6>
                                        <ul class="list-group">
                                            @foreach (var spec in prog.StudyProgramSpecializationInputModels)
                                            {
                        <li>@spec.Name</li>}
                                        </ul>}

    <br />
    <button type="button" @onclick="@AddProgram">Dodaj studijski program</button>
    <br />
    <button type="submit">Dodaj fakultet</button>
</EditForm>


@code
{ FacultyInputModel model = new FacultyInputModel();

    ICollection<Faculty> faculties;

    protected override async Task OnInitializedAsync()
    {
        faculties = await ApiService.GetAsync<ICollection<Faculty>>("/faculties");
    }

    public async Task AddFaculty()
    {
        Console.WriteLine("Dodan fakultet sa sljedecim podacima:");
        Console.WriteLine($"Naziv: {model.Name}");
        Console.WriteLine($"Adresa: {model.Address}");
        Console.WriteLine($"Broj studijskih programa: {model.StudyProgramInputModels.Count()}");
        foreach (var prog in model.StudyProgramInputModels)
        {
            Console.WriteLine($"Naziv programa: {prog.Name}");
            Console.WriteLine($"Ciklus: {prog.Cycle}");
            Console.WriteLine($"Trajanje: {prog.DurationYears}");
            Console.WriteLine($"Broj studijskih smjerova: {prog.StudyProgramSpecializationInputModels.Count()}");

            foreach (var spec in prog.StudyProgramSpecializationInputModels)
            {
                Console.WriteLine($"Naziv smjera: {spec.Name}");
            }
        }
    }

    public async Task AddProgram()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(AddStudyProgramPopup.FacultyInputModel), model);

        var modal = Modal.Show<AddStudyProgramPopup>("Dodavanje studijskog programa", parameters);
        var result = await modal.Result;
        if (!result.Cancelled)
            base.StateHasChanged();

    } }
