@page "/applications/author/{AuthorId:int}"
@inject ApiService ApiService
@inject Microsoft.JSInterop.IJSRuntime js
@inject IModalService Modal



<style>
    body {
        padding-top: 7rem;
        padding-bottom: 7rem;
        margin: auto;
    }
    h3{
        color:gray;
    }

    .selected-row {
        /*background-color: rgba(0, 251, 255, 0.3) !important;*/
        background-color: rgba(0, 0, 0, 0.3);
    }
    .spinner-border {
        width: 80px;
        height: 80px;
        top: 40%;
        left: 46%;
        position: absolute;

    }
</style>

<div class="container">
     @if (applications.Count() == 0)
      {
          <div class="d-flex justify-content-center">
              <div class="spinner-border text-info" role="status">
                  <span class="sr-only"></span>
              </div>
          </div>
     }
     else
     {
         <h3>Pristigle prijave</h3>
         

        <table class="table table-bordered" id="received-applications">
            <thead class="thead-dark">
                <tr>
                    <th>Ime i prezime</th>
                    <th>Email</th>
                    <th>Komentar prijavljenog</th>
                    <th>Naziv projekta</th>
                    <th>Profil</th>
                    <th style="width:8rem;">Status</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < applications.Count(); ++i)
                {
                    int index = i;
                    var a = applications.ElementAt(index);

                    @if(receivedNotifications.Select(t => t).Where(n => n == a.ApplicationId).Count() == 1)
                    {                        
                       <tr bgcolor="PaleGoldenRod" style="border: 2px solid palegoldenrod" @onclick="@(() => { selectedApplicationId = a.ApplicationId; ApplicationSelected("received-applications", "", a.ApplicationId, index); })">
                        <td><a href=@($"/users/{a.ApplicantId}")>@a.ApplicantFullName</a></td>
                        <td>@a.ApplicantEmail</td>
                        <td>@a.ApplicantComment</td>
                        <td><a href=@($"/projects/{a.ProjectId}")>@a.ProjectName</a></td>
                        <td>@a.ActivityName</td>
                        <td>@(a.ProjectApplicationStatus.GetAttribute<DisplayAttribute>().Name) 
                           <svg xmlns="http://www.w3.org/2000/svg" width="24" height="18" fill="brown" class="bi bi-exclamation-circle" viewBox="0 0 16 18">
                              <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                              <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z"/>
                            </svg>
                           
                           </td>
                     </tr>
                    }
                    else
                    {
                        <tr @onclick="@(() => { selectedApplicationId = a.ApplicationId; ApplicationSelected("received-applications", "", a.ApplicationId, index); })">
                            <td><a href=@($"/users/{a.ApplicantId}")>@a.ApplicantFullName</a></td>
                            <td>@a.ApplicantEmail</td>
                            <td>@a.ApplicantComment</td>
                            <td><a href=@($"/projects/{a.ProjectId}")>@a.ProjectName</a></td>
                            <td>@a.ActivityName</td>
                            <td>@(a.ProjectApplicationStatus.GetAttribute<DisplayAttribute>().Name)</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @* ukinuti button ako je selectedApplicationId jednak -1 *@

     <button class="btn btn-outline-info float-right"    @onclick="@(() => ChangeApplicationStatus())">Promijeni status</button>

     
        

     }



</div>








@code {

    [Parameter]
    public int AuthorId { get; set; }

    private int selectedApplicationId = 0;
    

    private ICollection<ApplicationDisplayModel> applications = new List<ApplicationDisplayModel>();
    private ICollection<int> receivedNotifications = new List<int>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("resetujemo indeks");
            selectedApplicationId = 0;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        applications = await ApiService.GetAsync<ICollection<ApplicationDisplayModel>>($"applications2/author/{AuthorId}");
        receivedNotifications = await ApiService.GetAsync<ICollection<int>>($"notifications/author/{AuthorId}/applications");
        //await ApiService.DeleteAsync($"notifications/author/{AuthorId}/applications");
    
    }

     public  async  Task ApplicationSelected(string tableToHighlight, string tableToClear, int id, int index)
    {
        @* ne highlightuje se red koji kliknem... *@
        string[] tablesToClear = { tableToClear };
        await js.InvokeVoidAsync("setTableHighlight", tableToHighlight, index, tablesToClear);

    
    }

    public async Task ChangeApplicationStatus()
    {
       
        if (selectedApplicationId > 0)
        {
            Console.WriteLine("iskociii");
            var applicationDisplayModel = applications.First(a => a.ApplicationId == selectedApplicationId);
            var inputModel = new ProjectApplicationInputModel();
            inputModel.FromDisplayModel(applicationDisplayModel);

            var parameters = new ModalParameters();
            parameters.Add(nameof(ReceivedApplicationsStatusChange.model), inputModel);
            var modal = Modal.Show<ReceivedApplicationsStatusChange>("Izmjena statusa prijave", parameters);
            var result = await modal.Result;

            if (!result.Cancelled)
            {
                //await ApiService.PutAsync<ProjectApplicationInputModel>($"applications/{inputModel.ApplicationId}", inputModel);
                Console.WriteLine("PRIJAVA UPDATEOVANA\n");
            }
          
            
            
        }
    }
}
