@page "/account/register"
@inject ApiService ApiService
@inject NavigationManager NavigationManager

<style>
    body {
        padding-top: 7rem;
        padding-bottom: 7rem;
    }

    .container {
        margin-bottom: 60px;
    }

    .tags-margin-right {
        margin-right: 5px;
    }

    .h3-title {
        color: gray;
        text-align: center;
    }

    .selected-row {
        background-color: rgba(0,0,0,.3) !important;
    }

    .spinner-border {
        width: 60px;
        height: 60px;
        text-align: center;
        top: 40%;
        position: absolute;
    }

    label {
        margin-bottom: 0.3rem;
    }

    .btn {
        margin-top: 1rem;
    }
</style>



@if (userProfileInputModel == null)
{
<div class="d-flex justify-content-center">
    <div class="spinner-border text-info" role="status">
        <span class="sr-only"></span>
    </div>
</div> }
else
{

<div class="container">
    <h3 class="h3-title">Registracija</h3>
    <AccountInformationView RegisterInputModel="@registerInputModel"></AccountInformationView>

    <UserInformationView UserProfileInputModel="@userProfileInputModel"
                         faculties="@faculties"
                         studyFields="@studyFields"></UserInformationView>

    <button class="btn btn-outline-info float-right" @onclick="@RegisterUser">Registruj se</button>

</div>            }

@code { private UserProfileInputModel userProfileInputModel = new UserProfileInputModel();
    private RegisterInputModel registerInputModel = new RegisterInputModel();
    private ICollection<Faculty> faculties = new List<Faculty>();
    private ICollection<StudyField> studyFields = new List<StudyField>();
    private ICollection<Tag> tags = new List<Tag>();


    protected override async Task OnInitializedAsync()
    {
        faculties = await ApiService.GetAsync<ICollection<Faculty>>($"faculties");
        studyFields = (await ApiService.GetAsync<Dictionary<string, StudyField>>($"fields")).Values;
        tags = (await ApiService.GetAsync<Dictionary<string, Tag>>($"tags")).Values.ToList();
    }

    public async Task RegisterUser()
    {
        await ApiService.PostAsync("/account/register", registerInputModel);

        await ApiService.PostAsync("/users", userProfileInputModel);

        NavigationManager.NavigateTo("/account/login");
    } }
