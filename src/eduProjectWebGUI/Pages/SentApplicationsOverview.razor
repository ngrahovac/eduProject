@page "/users/{UserId:int}/applications"
@inject ApiService ApiService
@inject Microsoft.JSInterop.IJSRuntime js
@inject IModalService Modal
@inject NavigationManager NavigationManager

<div class="content">
    <h3>Poslane prijave</h3>

    @foreach (var projectModel in ProjectApplicationsDisplayModels)
    {
        <div class="section">
            <h4 class="title"><a href="@($"{NavigationManager.BaseUri}projects/{projectModel.ProjectId}")" style="color:black">@projectModel.Title</a></h4>

            @foreach (var profileModel in projectModel.CollaboratorProfileApplicationsDisplayModels)
            {
                allTables.Add($"sent-applications-{profileModel.CollaboratorProfileDisplayModel.CollaboratorProfileId}");
                <h5>@profileModel.CollaboratorProfileDisplayModel.Description</h5>
                <div class="collaborator-profiles-table">
                    <table id=@($"sent-applications-{profileModel.CollaboratorProfileDisplayModel.CollaboratorProfileId}")>
                        <thead>
                            <tr>
                                <td>Id prijave</td>
                                <td>Komentar prijavljenog</td>
                                <td>Komentar autora</td>
                                <td>Status prijave</td>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < profileModel.ApplicationDisplayModels.Count(); i++)
                            {
                                int index = i;
                                var applicationModel = profileModel.ApplicationDisplayModels.ElementAt(index);

                                <tr @onclick="@(async () =>
                                            {
                                                selectedApplicationId = applicationModel.ApplicationId;
                                                tablesToClear.Clear();
                                                foreach (var item in allTables)
                                                    tablesToClear.Add(item);
                                                tablesToClear.Remove($"sent-applications-{profileModel.CollaboratorProfileDisplayModel.CollaboratorProfileId}");
                                                var arr = tablesToClear.ToArray();
                                                await js.InvokeVoidAsync("setTableHighlight", $"sent-applications-{profileModel.CollaboratorProfileDisplayModel.CollaboratorProfileId}", index, arr);
                                            })">
                                    <td>@applicationModel.ApplicationId</td>
                                    <td>@applicationModel.ApplicantComment</td>
                                    <td>@applicationModel.AuthorComment</td>
                                    <td>@(applicationModel.ProjectApplicationStatus.GetAttribute<DisplayAttribute>().Name)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    }

    <div class="buttons">
        <button @onclick="@RevokeApplication">Poništi prijavu</button>
    </div>
</div>

