
<style>
    .form-control{
        margin-bottom:0.5rem;
    }
</style>


<EditForm Model="@model" OnValidSubmit="@SaveApplicationChanges">
    <InputSelect class="form-control" @bind-Value="@model.ProjectApplicationStatus">
        @foreach (var s in Enum.GetValues(typeof(ProjectApplicationStatus)))
        {
            if ((ProjectApplicationStatus)s == model.ProjectApplicationStatus)
            {
                <option selected value="@s">@s</option>
            }
            else
            {
                <option value="@s">@s</option>
            }
        }
    </InputSelect>

    <p style="margin-bottom:0.25rem;">Komentar autora</p>
    <InputText class="form-control"  @bind-Value="@model.AuthorComment"></InputText>
   

    @if(model.ProjectApplicationStatus != originalStatus)
    {
        <button class="btn btn-outline-info float-right" type="submit">Sačuvaj</button>
    }
    
</EditForm>
@code {

    [Parameter]
    public ProjectApplicationInputModel model { get; set; }

    private ProjectApplicationStatus originalStatus;

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        originalStatus = model.ProjectApplicationStatus;
    }

    public async Task SaveApplicationChanges()
    {
        Console.WriteLine($"id prijave: {model.ApplicationId}\n" +
            $"id prijavljenog: {model.ApplicantId}\n" +
            $"komentar prij: {model.ApplicantComment}\n" +
            $"komentar autora: {model.AuthorComment}\n" +
            $"status: {model.ProjectApplicationStatus}\n" +
            $"id profila: {model.CollaboratorProfileId}");
        ModalInstance.Close();
    }
}
