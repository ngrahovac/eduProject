@inject Microsoft.JSInterop.IJSRuntime js
@inject ProjectApplicationInputModel model

<div class="section">
    <div class="heading">
        <img src="/css/bootstrap/list-check.svg" width="30" height="30" />
        <h4 class="title">Profili traženih saradnika</h4>
    </div>
    <hr class="divider" />
    <h5> Profili nastavnog osoblja </h5>
    <div class="collaborator-profiles-table">
        <table id="faculty-member-profiles">
            <thead>
                <tr>
                    <th>Fakultet</th>
                    <th>Naučna oblast</th>
                    <th>Opis aktivnosti</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < FacultyMemberProfileDisplayModels.Count(); i++)
                {
                    int index = i;
                    FacultyMemberProfileDisplayModel profile = FacultyMemberProfileDisplayModels.ElementAt(index);

                    if (IsProjectRecommended && profile.Recommended)
                    {
                        <tr class="recommended-profile"
                            @onclick="@(()=>CollaboratorProfileSelected("faculty-member-profiles", "student-profiles", profile.CollaboratorProfileId, index))">
                            <td>@profile.FacultyName</td>
                            <td>@profile.StudyFieldName</td>
                            <td>@profile.Description</td>
                        </tr>
                    }
                    else
                    {
                        <tr @onclick="@(()=>CollaboratorProfileSelected("faculty-member-profiles", "student-profiles", profile.CollaboratorProfileId, index))">
                            <td>@profile.FacultyName</td>
                            <td>@profile.StudyFieldName</td>
                            <td>@profile.Description</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <h5>Profili studenata</h5>
    <div class="collaborator-profiles-table">
        <table id="student-profiles">
            <tr>
                <th>Fakultet</th>
                <th>Ciklus</th>
                <th>Studijski program</th>
                <th>Studijski smjer</th>
                <th>Godina</th>
                <th>Opis aktivnosti</th>
            </tr>
            @for (int i = 0; i < StudentProfileDisplayModels.Count(); i++)
            {
                int index = i;
                StudentProfileDisplayModel profile = StudentProfileDisplayModels.ElementAt(index);

                @if (IsProjectRecommended && profile.Recommended)
                {
                    <tr class="recommended-profile" @onclick="@(() => CollaboratorProfileSelected("student-profiles", "faculty-member-profiles", profile.CollaboratorProfileId, index))">
                        <td>@profile.FacultyName</td>
                        <td>@profile.StudyCycle</td>
                        <td>@profile.StudyProgramName</td>
                        <td>@profile.StudyProgramSpecializationName</td>
                        <td>@profile.StudyYear</td>
                        <td>@profile.Description</td>


                    </tr>
                }
                else
                {
                    <tr @onclick="@(() => CollaboratorProfileSelected("student-profiles", "faculty-member-profiles", profile.CollaboratorProfileId, index))">
                        <td>@profile.FacultyName</td>
                        <td>@profile.StudyCycle</td>
                        <td>@profile.StudyProgramName</td>
                        <td>@profile.StudyProgramSpecializationName</td>
                        <td>@profile.StudyYear</td>
                        <td>@profile.Description</td>
                    </tr>
                }

            }
        </table>
    </div>
</div>


@code {

    [Parameter]
    public bool IsProjectRecommended { get; set; }

    [Parameter]
    public ICollection<StudentProfileDisplayModel> StudentProfileDisplayModels { get; set; }

    [Parameter]
    public ICollection<FacultyMemberProfileDisplayModel> FacultyMemberProfileDisplayModels { get; set; }


    public async Task CollaboratorProfileSelected(string tableToHighlight, string tableToClear, int collaboratorProfileId, int index)
    {
        string[] tablesToClear = { tableToClear };
        js.InvokeVoidAsync("setTableHighlight", tableToHighlight, index, tablesToClear);
        model.CollaboratorProfileId = collaboratorProfileId;
    }

    public async Task HighlightRecommendedProfile(string tableToHighlight, int index)
    {
        await js.InvokeVoidAsync("highlightRecommendedProfile", tableToHighlight, index);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            model.CollaboratorProfileId = 0;
        }
    }
}
